{"ast":null,"code":"import { HttpResponse } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport let LogInterceptor = /*#__PURE__*/(() => {\n  class LogInterceptor {\n    constructor() {}\n    intercept(req, next) {\n      const started = Date.now();\n      return next.handle(req).pipe(tap(event => {\n        if (event instanceof HttpResponse) {\n          const elapsed = Date.now() - started;\n          console.log(`[${event.status}] Request for ${req.urlWithParams} took ${elapsed} ms.`);\n        }\n      }));\n    }\n  }\n  LogInterceptor.ɵfac = function LogInterceptor_Factory(t) {\n    return new (t || LogInterceptor)();\n  };\n  LogInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LogInterceptor,\n    factory: LogInterceptor.ɵfac\n  });\n  return LogInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}